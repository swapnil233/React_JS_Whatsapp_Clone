{"ast":null,"code":"var _jsxFileName = \"/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/NewConversationModal.js\";\nimport React, { useState } from 'react';\nimport { Modal, Form, Button } from 'react-bootstrap';\nimport { useContacts } from '../contexts/ContactsProvider';\nimport { useConversations } from '../contexts/ConversationsProvider';\nexport default function NewConversationModal({\n  closeModal\n}) {\n  const [selectedContactIds, setSelectedContactIds] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversations\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversations(selectedContactIds);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactId) {\n    setSelectedContactIds(prevSelectedContactIds => {\n      if (prevSelectedContactIds.includes(contactId)) {\n        return prevSelectedContactIds.filter(prevId => {\n          return contactId !== prevId;\n        });\n      } else {\n        return [...prevSelectedContactIds, contactId];\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Create a new Conversation\"), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, contacts.map(contact => /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: contact.id,\n    key: contact.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    value: selectedContactIds.includes(contact.id),\n    label: contact.name,\n    onChange: () => handleCheckboxChange(contact.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Create\"))));\n}","map":{"version":3,"sources":["/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/NewConversationModal.js"],"names":["React","useState","Modal","Form","Button","useContacts","useConversations","NewConversationModal","closeModal","selectedContactIds","setSelectedContactIds","contacts","createConversations","handleSubmit","e","preventDefault","handleCheckboxChange","contactId","prevSelectedContactIds","includes","filter","prevId","map","contact","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,QAAkC,iBAAlC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AAEA,eAAe,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA8C;AAEzD,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeN,WAAW,EAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAA0BN,gBAAgB,EAAhD;;AAEA,WAASO,YAAT,CAAsBC,CAAtB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AAEAH,IAAAA,mBAAmB,CAACH,kBAAD,CAAnB;AACAD,IAAAA,UAAU;AACb;;AAED,WAASQ,oBAAT,CAA8BC,SAA9B,EAAyC;AACrCP,IAAAA,qBAAqB,CAACQ,sBAAsB,IAAI;AAC5C,UAAGA,sBAAsB,CAACC,QAAvB,CAAgCF,SAAhC,CAAH,EAA8C;AAC1C,eAAOC,sBAAsB,CAACE,MAAvB,CAA8BC,MAAM,IAAI;AAC3C,iBAAOJ,SAAS,KAAKI,MAArB;AACH,SAFM,CAAP;AAGH,OAJD,MAIO;AACH,eAAO,CAAC,GAAGH,sBAAJ,EAA4BD,SAA5B,CAAP;AACH;AACJ,KARoB,CAArB;AASH;;AACD,sBACI,uDACI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,QAAQ,CAACW,GAAT,CAAaC,OAAO,iBACjB,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEA,OAAO,CAACC,EAA/B;AAAmC,IAAA,GAAG,EAAED,OAAO,CAACC,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEf,kBAAkB,CAACU,QAAnB,CAA4BI,OAAO,CAACC,EAApC,CAFX;AAGI,IAAA,KAAK,EAAED,OAAO,CAACE,IAHnB;AAII,IAAA,QAAQ,EAAE,MAAIT,oBAAoB,CAACO,OAAO,CAACC,EAAT,CAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CADL,eAWI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CADJ,CAFJ,CADJ;AAoBH","sourcesContent":["import React, { useState } from 'react'\nimport {Modal, Form, Button} from 'react-bootstrap'\nimport { useContacts } from '../contexts/ContactsProvider'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function NewConversationModal({ closeModal }) {\n\n    const [selectedContactIds, setSelectedContactIds] = useState([])\n    const { contacts } = useContacts()\n    const { createConversations } = useConversations()\n\n    function handleSubmit(e){\n        e.preventDefault()\n        \n        createConversations(selectedContactIds)\n        closeModal()\n    }\n\n    function handleCheckboxChange(contactId) {\n        setSelectedContactIds(prevSelectedContactIds => {\n            if(prevSelectedContactIds.includes(contactId)){\n                return prevSelectedContactIds.filter(prevId => {\n                    return contactId !== prevId\n                })\n            } else {\n                return [...prevSelectedContactIds, contactId]\n            }\n        })\n    }\n    return (\n        <>\n            <Modal.Header closeButton>Create a new Conversation</Modal.Header>\n            <Modal.Body>\n                <Form onSubmit={handleSubmit}>\n                    {contacts.map(contact => (\n                        <Form.Group controlId={contact.id} key={contact.id}>\n                            <Form.Check\n                                type=\"checkbox\"\n                                value={selectedContactIds.includes(contact.id)}\n                                label={contact.name}\n                                onChange={()=>handleCheckboxChange(contact.id)}\n                            />\n                        </Form.Group>\n                    ))}\n                    <Button type=\"submit\">Create</Button>\n                </Form>\n            </Modal.Body>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}