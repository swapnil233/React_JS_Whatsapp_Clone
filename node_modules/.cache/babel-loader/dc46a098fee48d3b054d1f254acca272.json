{"ast":null,"code":"var _jsxFileName = \"/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/contexts/ConversationsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nconst ConversationsContext = React.createContext();\nexport function useConversations() {\n  return useContext(ConversationsContext);\n}\nexport function ConversationsProvider({\n  children\n}) {\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n\n  function createConversation(recipients) {\n    setConversations(prevConversations => {\n      return [...prevConversations, {\n        recipients,\n        messages: []\n      }];\n    });\n  }\n\n  const formattedConversations = conversations.map(conversations => {\n    const recipients = conversation.recipients.map(recipient => {\n      const contact = contacts.find(contact => {\n        return contact.id === recipient;\n      });\n    });\n  });\n  return /*#__PURE__*/React.createElement(ConversationsContext.Provider, {\n    value: {\n      conversations,\n      createConversation\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/contexts/ConversationsProvider.js"],"names":["React","useContext","useLocalStorage","ConversationsContext","createContext","useConversations","ConversationsProvider","children","conversations","setConversations","createConversation","recipients","prevConversations","messages","formattedConversations","map","conversation","recipient","contact","contacts","find","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,MAAMC,oBAAoB,GAAGH,KAAK,CAACI,aAAN,EAA7B;AAEA,OAAO,SAASC,gBAAT,GAA4B;AAC/B,SAAOJ,UAAU,CAACE,oBAAD,CAAjB;AACH;AAED,OAAO,SAASG,qBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA6C;AAChD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;;AAEA,WAASQ,kBAAT,CAA4BC,UAA5B,EAAwC;AACpCF,IAAAA,gBAAgB,CAACG,iBAAiB,IAAI;AAClC,aAAO,CAAC,GAAGA,iBAAJ,EAAuB;AAAED,QAAAA,UAAF;AAAcE,QAAAA,QAAQ,EAAC;AAAvB,OAAvB,CAAP;AACH,KAFe,CAAhB;AAGH;;AAED,QAAMC,sBAAsB,GAAGN,aAAa,CAACO,GAAd,CAAkBP,aAAa,IAAI;AAC9D,UAAMG,UAAU,GAAGK,YAAY,CAACL,UAAb,CAAwBI,GAAxB,CAA4BE,SAAS,IAAI;AACxD,YAAMC,OAAO,GAAGC,QAAQ,CAACC,IAAT,CAAcF,OAAO,IAAI;AACrC,eAAOA,OAAO,CAACG,EAAR,KAAaJ,SAApB;AACH,OAFe,CAAhB;AAGH,KAJkB,CAAnB;AAKH,GAN8B,CAA/B;AAQA,sBACI,oBAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAI;AAAET,MAAAA,aAAF;AAAiBE,MAAAA;AAAjB,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADJ;AAKH","sourcesContent":["import React, {useContext} from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ConversationsContext = React.createContext()\n\nexport function useConversations() {\n    return useContext(ConversationsContext)\n}\n\nexport function ConversationsProvider({ children }) {\n    const [conversations, setConversations] = useLocalStorage('conversations', [])\n\n    function createConversation(recipients) {\n        setConversations(prevConversations => {\n            return [...prevConversations, { recipients, messages:[] }]\n        })\n    }\n\n    const formattedConversations = conversations.map(conversations => {\n        const recipients = conversation.recipients.map(recipient => {\n            const contact = contacts.find(contact => {\n                return contact.id===recipient\n            })\n        })\n    })\n\n    return (\n        <ConversationsContext.Provider value = {{ conversations, createConversation }}>\n            {children}\n        </ConversationsContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}