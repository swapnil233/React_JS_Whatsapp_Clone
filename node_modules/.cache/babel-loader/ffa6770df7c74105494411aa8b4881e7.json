{"ast":null,"code":"var _jsxFileName = \"/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/OpenConversation.js\";\nimport React, { useState } from 'react';\nimport { Form, InputGroup, Button } from 'react-bootstrap';\nimport { useConversations } from '../contexts/ConversationsProvider';\nexport default function OpenConversation() {\n  const [text, setText] = useState('');\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.id), text);\n    setText('');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex flex-column flex-grow-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow-1 overflow-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"h-100 d-flex flex-column align-items-start justify-content-end px-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, selectedConversation.messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"my-1 d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, message.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, message.fromMe ? 'You' : message.senderName));\n  }))), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    required: true,\n    value: text,\n    onChange: e => setText(e.target.value),\n    style: {\n      height: '75px',\n      resize: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Send\"))))));\n}","map":{"version":3,"sources":["/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/OpenConversation.js"],"names":["React","useState","Form","InputGroup","Button","useConversations","OpenConversation","text","setText","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","id","messages","message","index","fromMe","senderName","target","value","height","resize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEQ,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwCL,gBAAgB,EAA9D;;AAEA,WAASM,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,WAAW,CACPC,oBAAoB,CAACI,UAArB,CAAgCC,GAAhC,CAAoCC,CAAC,IAAIA,CAAC,CAACC,EAA3C,CADO,EAEPV,IAFO,CAAX;AAIAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,oBAAoB,CAACQ,QAArB,CAA8BH,GAA9B,CAAkC,CAACI,OAAD,EAAUC,KAAV,KAAoB;AACnD,wBACI;AACI,MAAA,GAAG,EAAIA,KADX;AAEI,MAAA,SAAS,EAAG,yBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAII;AACI,MAAA,SAAS,EAAK,qBAAoBD,OAAO,CAACE,MAAR,GAAiB,uBAAjB,GAA2C,QAAS,EAD1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKF,OAAO,CAACZ,IAHb,CAJJ,eAUI;AACI,MAAA,SAAS,EAAK,oBAAmBY,OAAO,CAACE,MAAR,GAAiB,YAAjB,GAAgC,EAAG,EADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKF,OAAO,CAACE,MAAR,GAAiB,KAAjB,GAAyBF,OAAO,CAACG,UAHtC,CAVJ,CADJ;AAkBH,GAnBA,CADL,CADJ,CADJ,eA0BI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAIX,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,KAAK,EAAEJ,IAHX;AAII,IAAA,QAAQ,EAAEK,CAAC,IAAIJ,OAAO,CAACI,CAAC,CAACW,MAAF,CAASC,KAAV,CAJ1B;AAKI,IAAA,KAAK,EAAI;AAAEC,MAAAA,MAAM,EAAC,MAAT;AAAiBC,MAAAA,MAAM,EAAC;AAAxB,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CARJ,CADJ,CADJ,CA1BJ,CADJ;AA6CH","sourcesContent":["import React, { useState } from 'react'\nimport { Form, InputGroup, Button } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function OpenConversation() {\n    const [text, setText] = useState('')\n    const { sendMessage, selectedConversation } = useConversations()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        sendMessage(\n            selectedConversation.recipients.map(r => r.id),\n            text\n        )\n        setText('')\n    }\n\n    return (\n        <div className=\"d-flex flex-column flex-grow-1\">\n            <div className=\"flex-grow-1 overflow-auto\">\n                <div className=\"h-100 d-flex flex-column align-items-start justify-content-end px-3\">\n                    {selectedConversation.messages.map((message, index) => {\n                        return (\n                            <div\n                                key = {index}\n                                className = \"my-1 d-flex flex-column\"\n                            >\n                                <div \n                                    className = {`rounded px-2 py-1 ${message.fromMe ? 'bg-primary text-white' : 'border'}`}>\n\n                                    {message.text}\n                                </div>\n\n                                <div \n                                    className = {`text-muted small ${message.fromMe ? 'text-right' : ''}`}>\n\n                                    {message.fromMe ? 'You' : message.senderName}\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n\n            <Form onSubmit = {handleSubmit}>\n                <Form.Group className='m-2'>\n                    <InputGroup>\n                        <Form.Control \n                            as='textarea' \n                            required \n                            value={text}\n                            onChange={e => setText(e.target.value)}\n                            style = {{ height:'75px', resize:'none' }}\n                        />\n                        <InputGroup.Append>\n                            <Button type=\"submit\">Send</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form.Group>\n            </Form>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}