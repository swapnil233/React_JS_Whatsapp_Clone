{"ast":null,"code":"var _jsxFileName = \"/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/Conversations.js\";\nimport React from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { useConversations } from '../contexts/ConversationsProvider';\nexport default function Conversations() {\n  const {\n    conversations,\n    selectConversationIndex\n  } = useConversations();\n  return /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, conversations.map((conversation, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    action: true,\n    onClick: () => selectConversationIndex(index),\n    active: conversation.selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, conversation.recipients.map(r => r.name).join(', '))));\n}","map":{"version":3,"sources":["/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/components/Conversations.js"],"names":["React","ListGroup","useConversations","Conversations","conversations","selectConversationIndex","map","conversation","index","selected","recipients","r","name","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AAEA,eAAe,SAASC,aAAT,GAAyB;AACpC,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA;AAAjB,MAA6CH,gBAAgB,EAAnE;AAGA,sBACI,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,aAAa,CAACE,GAAd,CAAkB,CAACC,YAAD,EAAeC,KAAf,kBACf,oBAAC,SAAD,CAAW,IAAX;AACK,IAAA,GAAG,EAAEA,KADV;AAEK,IAAA,MAAM,MAFX;AAGK,IAAA,OAAO,EAAI,MAAMH,uBAAuB,CAACG,KAAD,CAH7C;AAIK,IAAA,MAAM,EAAID,YAAY,CAACE,QAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKF,YAAY,CAACG,UAAb,CAAwBJ,GAAxB,CAA4BK,CAAC,IAAIA,CAAC,CAACC,IAAnC,EAAyCC,IAAzC,CAA8C,IAA9C,CANL,CADH,CADL,CADJ;AAcH","sourcesContent":["import React from 'react'\nimport { ListGroup } from 'react-bootstrap'\nimport { useConversations } from '../contexts/ConversationsProvider'\n\nexport default function Conversations() {\n    const { conversations, selectConversationIndex } = useConversations()\n\n\n    return (\n        <ListGroup variant=\"flush\">\n            {conversations.map((conversation, index) => (\n                <ListGroup.Item\n                     key={index}\n                     action\n                     onClick = {() => selectConversationIndex(index)}\n                     active = {conversation.selected}\n                >\n                    {conversation.recipients.map(r => r.name).join(', ')}\n                </ListGroup.Item>\n            ))}\n        </ListGroup>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}