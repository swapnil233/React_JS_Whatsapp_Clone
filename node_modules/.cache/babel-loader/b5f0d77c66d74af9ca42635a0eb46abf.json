{"ast":null,"code":"var _jsxFileName = \"/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/contexts/ContactsProvider.js\";\nimport React, { useContext } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nconst ContactsContext = React.createContext();\nexport function useContacts() {\n  return useContext(ContactsContext);\n}\nexport function ContactsProvider({\n  children\n}) {\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\n\n  function createContact(id, name) {\n    setContacts(prevContacts => {\n      return [...prevContacts, {\n        id,\n        name\n      }];\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(ContactsContext.Provider, {\n    value: {\n      contacts,\n      createContact\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, children);\n}","map":{"version":3,"sources":["/Users/hasaniqbal/Desktop/React_Chat/react_chat/src/contexts/ContactsProvider.js"],"names":["React","useContext","useLocalStorage","ContactsContext","createContext","useContacts","ContactsProvider","children","contacts","setContacts","createContact","id","name","prevContacts"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,MAAMC,eAAe,GAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B,SAAOJ,UAAU,CAACE,eAAD,CAAjB;AACH;AAED,OAAO,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAC3C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,eAAe,CAAC,UAAD,EAAa,EAAb,CAA/C;;AAEA,WAASQ,aAAT,CAAuBC,EAAvB,EAA2BC,IAA3B,EAAiC;AAC7BH,IAAAA,WAAW,CAACI,YAAY,IAAI;AACxB,aAAO,CAAC,GAAGA,YAAJ,EAAkB;AAACF,QAAAA,EAAD;AAAKC,QAAAA;AAAL,OAAlB,CAAP;AACH,KAFU,CAAX;AAGH;;AAED,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAI;AAAEJ,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QADL,CADJ;AAKH","sourcesContent":["import React, {useContext} from 'react'\nimport useLocalStorage from '../hooks/useLocalStorage'\n\nconst ContactsContext = React.createContext()\n\nexport function useContacts() {\n    return useContext(ContactsContext)\n}\n\nexport function ContactsProvider({ children }) {\n    const [contacts, setContacts] = useLocalStorage('contacts', [])\n\n    function createContact(id, name) {\n        setContacts(prevContacts => {\n            return [...prevContacts, {id, name}]\n        })\n    }\n\n    return (\n        <ContactsContext.Provider value = {{ contacts, createContact }}>\n            {children}\n        </ContactsContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}